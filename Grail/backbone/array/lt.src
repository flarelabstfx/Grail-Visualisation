//#This comes from 3.1.4-new
//	This code copyright (c) by the Grail project.
//	No commercial use permitted without written consent.
//	August 1994

/***************************************************************************

  File:  classes/array/lt.src
  -----

  Description:
  ------------
    This file contains the definition of the following function:
      int array<Item>::operator<(const array<Item>& s) const

    This function is a public member of the template class array
    (declared in array.h).

  Revision History:
  -----------------
    The Grail Project               Initial version of source code
    M.Hoeberechts  98/05/25         Added header and comments


 ***************************************************************************/




/***************************************************************************

         int array<Item>::operator<(const array<Item>& s) const

  Description:
    This function is a public member of the template class array
    (declared in array.h).  This function determines whether this array
    is less than the parameter array.  This array is judged to be less
    than the parameter array if it contains less elements than the
    parameter array or if an element is encountered (in sequential
    order), which is less than the corresponding element in the parameter
    array.  If the parameter array is smaller than this array then the
    function returns 0.  If the arrays are identical, 0 is returned.
    If this array is less than the parameter array, 1 is returned.

    This function can be called in the following ways:
      result = this_array.operator<(test_array);
      result = (this_array < test_array);

  Parameters:
    const array<Item>& s - the array to be compared to this array

  Return Value:
    int - returns 1 if this array is less than the parameter array, 0
          otherwise.

 ***************************************************************************/


template <class Item>
int
array<Item>::operator<(const array<Item>& s) const
{
	int i; //by SH 05/20/2005
        // if this array is smaller, return 1
	if (sz < s.sz)
		return 1;

        // if the parameter array is smaller, return 0
	if (sz > s.sz)
		return 0;

        // find two elements which differ
	for (i=0; i<sz; ++i)
		if (p[i] != s.p[i])
			break;

        // if the arrays are the same, return 0
	if (i == sz)
		return 0;

        // if this array is less than parameter, return 1
	if (p[i] < s.p[i])
		return 1;

	return 0;
}
