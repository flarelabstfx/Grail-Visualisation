//#This comes from 3.1.4-new
//	This code copyright (c) by the Grail project.
//	No commercial use permitted without written consent.
//	June 1995

/***************************************************************************

  File:  classes/array/sort.src
  -----

  Description:
  ------------
    This file contains the definition of the following function:
      void array<Item>::sort() const

    This function is a public member of the template class array
    (declared in array.h).

  Revision History:
  -----------------
    The Grail Project               Initial version of source code
    M.Hoeberechts  98/05/27         Added header and comments


 ***************************************************************************/




/***************************************************************************

                       void array<Item>::sort() const

  Description:
    This function is a public member of the template class array
    (declared in array.h).  This function sorts the elements of this array
    according to the order specified by the compare function.  Since
    compare depends on the definition of < == and > for items, the sort
    order depends on the class declaration for items.  The C library
    function qsort (quicker sort) is used to accomplish the sorting.
    If the sorted property was already set when the function was called,
    then nothing is done.  Otherwise, the sorted property is set when the
    sort is complete.

    This function can be called in the following way:
      this_array.sort();

  Parameters:  none

  Return Value:  none

 ***************************************************************************/

template <class Item>
void
array<Item>::sort() const
{
	array<Item>*	c_a_const;

	if (sorted)
		return;

	qsort(p, sz, sizeof(Item),
		(int(*)(const void*,const void*)) array<Item>::compare);

	c_a_const = (array<Item>*) this;
	c_a_const->sorted = 1;
}
