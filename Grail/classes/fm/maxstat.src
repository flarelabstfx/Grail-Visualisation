//#This comes from 3.1.4-new
//	This code copyright (c) by the Grail project.
//	No commercial use permitted without written consent. 
//	February 1991

/***************************************************************************

  File:  classes/fm/maxstat.src
  -----

  Description:
  ------------
    This file contains the definition of the following function:
      state fm<Label>::max_state() const

    This function is a public member of the template class fm (declared 
    in classes/fm/fm.h).

  Revision History:
  -----------------
    The Grail Project               Initial version of source code
    M.Hoeberechts  98/09/07         Added header and comments

 ***************************************************************************/




/***************************************************************************

                    state fm<Label>::max_state() const

  Description:
    This function is a public member of the template class fm (declared 
    in classes/re/fm.h).  Find the state with the highest number in this
    fm (maximum state).  Returns the maximum state.

    This function can be called in the following way:
      last_state = this_fm.max_state();

  Parameters:  none

  Return Value:
    state - the maximum state in this fm.
  
 ***************************************************************************/

template <class Label>
state
fm<Label>::max_state() const
{
	int	i;
	state 	max;

	max = 0;

	// check all states connected by arcs for highest number
	for (i=0; i<size(); ++i)
	{
		if (arcs[i].get_source() > max)
			max = arcs[i].get_source();
		if (arcs[i].get_sink() > max)
			max = arcs[i].get_sink();
	}

	// check all start states for higher numbered state
	for (i=0; i<start_states.size(); ++i)
	{
		if (start_states[i] > max)
			max = start_states[i];	
	}

	// check all final states for higher numbered state
	for (i=0; i<final_states.size(); ++i)
	{
		if (final_states[i] > max)
			max = final_states[i];	
	}

	return max;
}
