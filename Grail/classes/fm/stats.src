//#This comes from 3.1.4-new
//	This code copyright (c) by the Grail project.
//	No commercial use permitted without written consent.
//	January 1996


/***************************************************************************

  File:  classes/fm/stats.src
  -----

  Description:
  ------------
    This file contains the definition of the following function:
      void fm<Label>::stats(ostream& os) const

    This function is a public member of the template class fm (declared
    in classes/fm/fm.h).

  Revision History:
  -----------------
    The Grail Project               Initial version of source code
    M.Hoeberechts  98/09/09         Added header and comments

 ***************************************************************************/




/***************************************************************************

              void fm<Label>::stats(ostream& os) const

  Description:
    This function is a public member of the template class fm (declared
    in classes/re/fm.h).  This function outputs a line of statistics
    about this fm on the parameter output stream.  The data outputted
    consists of the number of start states, the number of final states,
    the total number of states, the number of reachable states and
    the number of instructions followed by an end of line.  For example:
    2 3 9 8 5

    The output stream must be valid and open before calling this function.

    This function can be called in the following way:
      this_fm(output_stream);

  Parameters:
    ostream& os - the output stream on which the stats should be printed

  Return Value:  none

 ***************************************************************************/
/*

  To add filter for these values, CC , July 2015

*/
template <class Label>
void
fm<Label>::stats(std::ostream& os) const
{
	set<state>	r_states;
	reachable_states(r_states);

	os << start_states.size() << " "
		<< final_states.size() <<  " "
		<< number_of_states() << " "
		<< r_states.size() << " "
		<< number_of_instructions() << std::endl;
}
